<!-- chapter utilities -->

<chapter id="chapter.controlpush">
   <title>Providing EPICS channel information to Tcl Servers</title>
   <para>
      <application>controlpush</application>
      is a program that is part of the EPICS support package.  It uses a
      configuration file to connect to a set of EPICS channels, connects to
      some TCP/IP server and then sends Tcl commands to that server to maintain 
      a set of Tcl arrays that allow the server process to maintain a copy of
      the state of those channels, their units and when their values were last updated.
   </para>
   <para>
      <application>controlpush</application>
      is descsribed fully in:
      <link linkend="manpage.controlpush">the controlpush manpage</link>.
   </para>
   <para>
      The intent is that 
      <application>controlpush</application> be pointed at a 
      <application>TclServer.</application>
      <link linkend="chapter.tclserver">The TclServer</link>
      is a wish shell extended with the ability to accept commands from 
      TCP/IP connected clients.  
   </para>
   <para>
      You can use 
      <application>controlpush</application>
      in conjunction with 
      <application>TclServer</application> 
      and application specific scripts to provide a visual display of control
      system parameters. 
      <link linkend="chapter.epicsdisplay">epicsdisplay</link> is an example
      of this technique.  Another typical use of 
      <application>controlpush</application> is in conjunction with readout
      skeletons that support 
      <application>tclserver</application> functionality to provide a set of
      data in the event stream that logs the control system parameters and
      their changes throughout the run.
   </para>
   <para>
       <application>controlpush</application>
       Maintains information in arrays that are indexed by channel name:
       <variablelist>
          <varlistentry>
	     <term><varname>EPICS_DATA(channelName)</varname></term>
	     <listitem><para>
	        Is the most recently received update for 
		<varname>channelName</varname>.
	     </para></listitem>
          </varlistentry>
	  <varlistentry>
	     <term><varname>EPICS_UNITS(channelName)</varname></term>
	     <listitem><para>
	        Are the engineering units for 
		<varname>channelName</varname>
             </para></listitem>
         </varlistentry>
         <varlistentry>
             <term><varname>EPICS_UPDATED(channelName)</varname></term>
	     <listitem><para>
	         Is the timestamp of the alst update received for
		 <varname>channelName</varname>.
             </para></listitem>
          </varlistentry>
       </variablelist>
   </para>

     
</chapter>

<!-- /chapter -->

<!-- manpage 1epics -->

<refentry id="manpage.controlpush">
    <refmeta>
        <refentrytitle>controlpush</refentrytitle>
        <manvolnum>1epics</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>controlpush</refname>
        <refpurpose>
            Push epics data into a Tcl Server (e.g. production readout).
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <cmdsynopsis>
            <command>
controlpush <replaceable>[options...] files...</replaceable>
            </command>
        </cmdsynopsis>

    </refsynopsisdiv>

    <refsect1>
        <title>OPTIONS</title>
        <para>
            Options that govern the actions of the program are:
            <variablelist>
                <varlistentry>
                    <term><option>-h --help</option></term>
                    <listitem>
                        <para>
                            Writes brief program help to stdout.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-V --version</option></term>
                    <listitem>
                        <para>
                            Writes the program version number to stdout.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-p<replaceable>portnum</replaceable> --port=<replaceable>portnum</replaceable></option>
                    </term>
                    <listitem>
                        <para>
                            <replaceable>portnum</replaceable> is the number of the port to which
                            controlpush will attempt to connect. See OPERATION below to know what
                            controlpush does once it has connected
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-i<replaceable>interval</replaceable> --interval=<replaceable>intervale</replaceable>
                          </option></term>
                    <listitem>
                        <para>
                            Specifies the refresh <replaceable>interval</replaceable> in seconds.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-n<replaceable>host</replaceable> --node=<replaceable>host</replaceable>
                          </option>
                    </term>
                    <listitem>
                        <para>
                            Specifies the node to which the <command>controlserver</command>
                            will connect.
                        </para>
                    </listitem>

                </varlistentry>
		<varlistentry>
		   <term><option>-a</option> (<option>--authorize</option>)</term>
		   <listitem>
		      <para>
		         Specifies that controlpush is connecting to a Tcl
   		         server that requires user authentication.  This should
   		         be used when controlpush is connecting to a tclserver at
   		         nscldaq 8.1 or later.
                      </para>
                   </listitem>
               </varlistentry>
            </variablelist>
        </para>
    </refsect1>
    <refsect1>
        <title>OPERATION</title>
        <para>
	    <application>controlpush</application>
	     reads its configuration file and  establishes 
	     epics lists that will update automatically via epics notifications.
	     <application>controlpush</application>
	     next connects to its server and periodically 
	     sends a batch of Tcl 
	     <command>set</command> commands to maintain the following
	     Tcl global arrays:
       <variablelist>
          <varlistentry>
	     <term><varname>EPICS_DATA(channelName)</varname></term>
	     <listitem><para>
	        Is the most recently received update for 
		<varname>channelName</varname>.
	     </para></listitem>
          </varlistentry>
	  <varlistentry>
	     <term><varname>EPICS_UNITS(channelName)</varname></term>
	     <listitem><para>
	        Are the engineering units for 
		<varname>channelName</varname>
             </para></listitem>
         </varlistentry>
         <varlistentry>
             <term><varname>EPICS_UPDATED(channelName)</varname></term>
	     <listitem><para>
	         Is the timestamp of the alst update received for
		 <varname>channelName</varname>.
             </para></listitem>
          </varlistentry>
       </variablelist>
        </para>
	<para>
	  <application>controlpush</application>  continues to run until the
	  socket that is connected to its server is closed, at which point it exits.
	</para>
    </refsect1>
    <refsect1>
        <title>CONFIGURATION FILES</title>
        <para>
	    <application>controlpush</application>
	    configuration files are simple text files.  Each line is either a
	    or a channel. 
         </para>
	 <para>
	    Comments consist of blank lines or lines whose first non-whitepsace
	    is the pound (<literal>#</literal>) character.
        </para>
	<para>
	   Channel lines, have as their first non-whitespace word, the name of
           an EPICS channel. All text following the channel name on a channel
	   line is ignored by this program.  Note, however that other software
	   (notably
	   <link linkend="chapter.epicsdisplay">epicsdisplay</link>) may 
	   parse additional characters for their own purposes.
	</para>
    </refsect1>
    <refsect1>
        <title>DEPENDENCIES</title>
	<itemizedlist>
	   <listitem><para>
	      The installer must be able to locate the EPICS installation.
	   </para></listitem>
	   <listitem><para>
	     The 
	     <application>caRepeater</application>,
	     normally in the architecture specific subdirectory of the
	     EPICS installation should be in the user's 
	     <varname>PATH</varname> environment variable.
	   </para></listitem>
	</itemizedlist>

    </refsect1>
</refentry>


<!-- /manpage -->

