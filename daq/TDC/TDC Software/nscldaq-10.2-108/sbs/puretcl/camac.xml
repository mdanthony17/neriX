<!-- chapter libraries -->
<chapter>
    <title>The CES CBD 8210 Tcl CAMAC Package</title>
    <para>
        This chapter describes a Tcl package (<literal>camac</literal>) that
        allows Tcl scripts to perform CAMAC operations via CES CBD 8210 VME
        CAMAC branch highway controllers.  This can be used to
        write control applications for CAMAC based modules.  Note that as the
        CBD 8201 is no longer in production we strongly recommend that you not
        build any new applications around this module.
        </para>
    <para>
        The functions in this library are loosely based on the ESONE CAMAC
        function library specification (IEEE 758).  The remainder of this chapter
        describes:
        <itemizedlist>
            <listitem>
                <para>How to incorporate this package into your scripts</para>
                </listitem>
            <listitem>
                <para>An overview of how to use this package.</para>
                </listitem>
            </itemizedlist>
        </para>
    <para>
        Reference information is available as well. See
        <link linkend="manpage.camactcl">camac(3tcl)</link>
    </para>
    <section>
        <title>Incorporating <literal>camac</literal> into your scripts</title>
        <para>
            Incorporating this package requires that you first make the
            NSCLDAQ Tcl package respository visible to the Tcl package load
            subsystem.  Having done that, you must then explicitly load the
            package via the <command>package require</command> command.
            </para>
        <para>
            The Tcl package load subsystem search paths are a combination of
            an environment variable (<varname>TCLLIBPATH</varname>), and a
            set of global script variables (<varname>auto_path</varname>).
            You can extend either of these mechanisms to include the
            NSCLDAQ Tcl package repository in the set of directories searched
            by the package load subsystem.  
            </para>
        <para>
            In the remainder of this section we are going to assume that you
            have defined the environment variable <varname>DAQROOT</varname>
            to be the base of the directory tree into which NSCLDAQ has been
            installed.
            </para>
        <para>
            The bash shell script fragment below shows how to add the NSCLDAQ
            package repository to the <varname>TCLLIBPATH</varname> environment
            variable.  This script extends any existing <varname>TCLLIBPATH</varname>
            definition rather than overwriting it
            <informalexample>
                <programlisting>
export TCLLIBPATH="$TCLLIBPATH $DAQROOT/TclLibs"
                    </programlisting>
                </informalexample>
            </para>
        <para>
            The Tcl script example below shows how to append the NSCLDAQ package
            repository path to the list of paths in the <varname>auto_path</varname>
            global variable.
            <informalexample>
                <programlisting>
global auto_path
global env
lappend auto_path [file join $env(DAQROOT) TclLibs]
                    </programlisting>
                </informalexample>
            </para>
        </section>
    <section>
        <title>An overview of the use of the <literal>camac</literal> package</title>
        <para>
            The unit of control for the ESONE CAMAC functions on which this
            package is based is a CAMAC module.  The package allows you to form
            connections to specific modules in specific branches an crates.
            </para>
        <para>
            All of the commands in <literal>camac</literal> are placed in the
            <literal>camac</literal> namespace.  The Tcl
            <command>namespace import</command> command can be used to import them
            into the current or global namespace.
            <warning>
                <title>Warning</title>
                <para>
                    The <literal>wienercamac</literal> package has an identical
                    set of commands in the <command>wienercamac</command>
                    namespace.  If you are using both packages it is best
                    not to import their commands.
                    </para>
                </warning>
            </para>
            <para>
                The command <command>cdreg</command> (remember this is in the
                <literal>camac</literal> namespace) is used to create a handle
                to a module in a specific CAMAC crate.  Once this handle has been
                created, commands like <command>cssa</command> and
                <command>cfsa</command> are used to perform operations on that
                module.  Additional block transfer commands exist to do
                Qstop, Qscan and block transfers.
                </para>
            <para>
                The implementation does not support LAM triggered functions, however
                extensions to the standard are provided that allow you to poll the
                crate for LAMs.  Other extensions allow you to determine the set
                of available CAMAC crates as well as to peform C and Z operations
                on any crate assuming the controller is compatible with the
                IEEE specifications of the A1/A2 crate controller (IEEE 596).
                </para>
        </section>
    </chapter>

<!-- /chapter -->

<!-- manpage 3tcl -->
<refentry id="manpage.camactcl">
  <refmeta>
     <refentrytitle>camac</refentrytitle>
     <manvolnum>3tcl</manvolnum>
  </refmeta>
  <refnamediv>
     <refname>camac</refname>
     <refpurpose>Provide access to CES CBD8210 CAMAC to Tcl scripts</refpurpose>
  </refnamediv>
  
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>
package require camac
    </command>
    </cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::cdreg  <replaceable>b c n ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::cfsa   <replaceable>reg f a ?d?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::cssa   <replaceable>reg f a ?d?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::qstop  <replaceable>reg f a ?maxn?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::qscan  <replaceable>reg f a ?maxn?</replaceable>
    </command>
</cmdsynopsis>

    <cmdsynopsis>
    <command>
camac::cblock <replaceable>reg f a num</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::isOnline <replaceable>b c ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::getGl    <replaceable>b ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::C        <replaceable>b c ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
<cmdsynopsis>
    <command>
camac::Z        <replaceable>b c ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::isInhibited <replaceable>b c ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::Inhibit  <replaceable>b c  bool ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <cmdsynopsis>
    <command>
camac::ReadLams <replaceable>b c  ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>  
  </refsynopsisdiv>
  <refsect1>
     <title>DESCRIPTION</title>
     <para>
        This package provides access to CAMAC modules via the
        CES CBD 8210 branch highway driver to Tcl scripts.
        Prior to use you must add the NSCLDAQ package repository path to the
        Tcl package search list.
     </para>
  </refsect1>
  <refsect1>
     <title>
    PACKAGE COMMANDS
     </title>
     <para>
        The commands below share many of the same parameters:
        <variablelist>
            <varlistentry>
                <term><replaceable>b</replaceable></term>
                <listitem>
                    <para>
                        Is a branch number.  For the CES CBD 8210 this is the
                        number set in the front panel branch number switch.
                        </para>
                    </listitem>
                </varlistentry>
            <varlistentry>
                <term><replaceable>c</replaceable></term>
                <listitem>
                    <para>
                        A CAMAC crate number on some branch.  This is set in the
                        front panel rotary switch of the A1 or A2 crate controller
                        installed in the right-most pair of slots of the crate.
                        </para>
                    </listitem>
                </varlistentry>
            <varlistentry>
                <term><replaceable>n</replaceable></term>
                <listitem>
                    <para>
                        The slot number of a module in a CAMAC crate.  Slots in
                        a CAMAC crate are numbered from 1 starting at the left.
                        </para>
                    </listitem>
                </varlistentry>
            <varlistentry>
                <term><replaceable>a</replaceable></term>
                <listitem>
                    <para>
                        The subaddress within a module.   A CAMAC modules is
                        defined to have 16 subaddresses numbered 0-15.
                        Each module uses this set of subaddresses differently.\
                        </para>
                    </listitem>
                </varlistentry>
            <varlistentry>
                <term><replaceable>vmecrate</replaceable></term>
                <listitem>
                    <para>
                        A VME crate number in which at least one
                        CES CBD 8210 module has been installed.
                        </para>
                    </listitem>
                </varlistentry>
            <varlistentry>
                <term><replaceable>reg</replaceable></term>
                <listitem>
                    <para>
                        A CAMAC module handle.  These are produced using the
                        <command>camac::cdreg</command> command below.  This is
                        used to select the CAMAC module operated on by several
                        of the commands.
                        </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </para>
    <cmdsynopsis>
    <command>
package require camac
    </command>
    </cmdsynopsis>
    <para>
        Loads the <literal>camac</literal> package into the interpreter.  The
        commands loaded are all in the <literal>camac</literal> namespace.
        The Tcl <command>namespace import</command> command can be used to
        allow access to these commands without using a fully qualified namespace,
        however if you are using other CAMAC Tcl libraries, beware as they will
        most likely implement the same commands in a different namespace.
        </para>
    <cmdsynopsis>
    <command>
camac::cdreg  <replaceable>b c n ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Creates and returns a handle to a CAMAC module specified by
        <parameter>b</parameter> <parameter>c</parameter>
        <parameter>n</parameter> and <parameter>vmecrate</parameter>.
        If the <parameter>vmecrate</parameter> parameter is omitted,
        VME crate 0 is used by default.   The command returns a value
        that should be used as the <parameter>reg</parameter> parameter
        in subsequent operations in this package.
        </para>
    <cmdsynopsis>
    <command>
camac::cfsa   <replaceable>reg f a ?d?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Performs a CAMAC operation on the module defined by <parameter>reg</parameter>.
        If the operation is a write, the <parameter>d</parameter> parameter must
        be supplied and is the data to write.  The CAMAC bus is a 24 bit bus,
        so only the least significant 24 bits of <parameter>d</parameter> will
        actually be written.
        </para>
    <para>
        The command returns a 3 element Tcl list.  The first element of this
        list is the data parameter to the command if the <parameter>f</parameter>
        code was a write code.  If <parameter>f</parameter> indicated a read,
        the first element of the list is the data read.  If the
        <parameter>f</parameter> was a control operation, the first element of the
        list is meaningless.  The second element of the list is the
        Q-response for the operation and the third element the X-response.
        </para>
    <cmdsynopsis>
    <command>
camac::cssa   <replaceable>reg f a ?d?</replaceable>
    </command>

</cmdsynopsis>
    <para>
        Same as <command>camac::cfsa</command> however for data transfer operations,
        this only transfers the least significant 16 bits.  Note that for
        the CES CBD 8210 16 bit operations are significantly faster than
        24 bit operations as the data paths to the module are only 16 bits wide.
        </para>
    <cmdsynopsis>
    <command>
camac::qstop  <replaceable>reg f a ?maxn?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Performs a Q-stop block transfer from the module specified by
        <parameter>reg</parameter> with the read function <parameter>f</parameter>.
        Only read Q-stops are supported.  The function is repeated until no
        Q response is present or until <parameter>maxn</parameter> transfers
        have been performed, whichever is first.  The result of this command is
        a Tcl list.  Each element of the list a value read from the module during
        the read operation.
        </para>
    <cmdsynopsis>
    <command>
camac::qscan  <replaceable>reg f a ?maxn?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Peforms a Q-scan block transfer.  In a Q-scan operation the subaddress
        is incremented until the module does not return a Q at which point the
        subaddress is reset to zero and the slot is incremented.  This process
        repeats until the read does not return a valid X-response or when
        <parameter>maxn</parameter> is exceeeded.
        </para>
    <para>
        The command returns a list of the data that has been returned from the
        module.
        </para>
    <cmdsynopsis>
    <command>
camac::cblock <replaceable>reg f a num</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Repeats the read operation <parameter>num</parameter> times putting
        the results of the reads into a list that is returned by the command.
        </para>
    <cmdsynopsis>
    <command>
camac::isOnline <replaceable>b c ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Returns true if the CAMAC crate selected by the command parameters is
        online.  This is not reliable as a probe for crates on branches that don't
        exist.
        </para>
    <cmdsynopsis>
    <command>
camac::getGl    <replaceable>b ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Returns the value of the graded lam register for the
        specified branch highway module.
        </para>
    <cmdsynopsis>
    <command>
camac::C        <replaceable>b c ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Peforms a C cycle on the selected CAMAC crate. This means that the
        crate dataway C line is pulsed by the controller.
        </para>
<cmdsynopsis>
    <command>
camac::Z        <replaceable>b c ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Performs a Z cycle on the selected CAMC crate.
        </para>
    <cmdsynopsis>
    <command>
camac::isInhibited <replaceable>b c ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <para>
        Returns true if the specified CAMAC crate is inhibited (its
        <literal>I</literal> line is asserted).
        </para>
    <cmdsynopsis>
    <command>
camac::Inhibit  <replaceable>b c  bool ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>
    <para>
    Sets the inhibit line of the specified crate to
    <parameter>bool</parameter>
    </para>
    <cmdsynopsis>
    <command>
camac::ReadLams <replaceable>b c  ?vmecrate?</replaceable>
    </command>
</cmdsynopsis>  
<para>
Returns the LAM register of the controller for the specified crate.
</para>
  </refsect1>
 
</refentry>


<!-- /manpage -->