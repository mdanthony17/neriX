# scalerParameterDialog.tcl --
#
# UI generated by GUI Builder Build 107673 on 2005-08-11 16:37:06 from:
#    //homedir/home2/fox/My Documents/DAQDocs/2005a/daq/DirectoryStructure/code/scalerParameterDialog.ui
# This file is auto-generated.  Only the code within
#    '# BEGIN USER CODE'
#    '# END USER CODE'
# and code inside the callback subroutines will be round-tripped.
# The proc names 'ui' and 'init' are reserved.
#

package require Tk 8.4

# Declare the namespace for this dialog
namespace eval scalerParameterDialog {}

# Source the ui file, which must exist
source [file join [file dirname [info script]] scalerParameterDialog_ui.tcl]

# BEGIN USER CODE
#  This code ensures that pkg_mkIndex does not choke
# on this.

if {[info var ::argv0] == ""} {
    set ::argv0 ""
}
if {[info var ::argv] == ""} {
    set ::argv ""
}
package provide scalerParameterDialog 1.0
# END USER CODE

# BEGIN CALLBACK CODE
# ONLY EDIT CODE INSIDE THE PROCS.

# scalerParameterDialog::cancel_command --
#
# Callback to handle cancel widget option -command
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::cancel_command args {}

# scalerParameterDialog::channels_command --
#
# Callback to handle channels widget option -command
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::channels_command args {
    puts "Channels"
    }

# scalerParameterDialog::channels_invalidcommand --
#
# Callback to handle channels widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::channels_invalidcommand args {}

# scalerParameterDialog::channels_validatecommand --
#
# Callback to handle channels widget option -validatecommand
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::channels_validatecommand args {}

# scalerParameterDialog::channels_xscrollcommand --
#
# Callback to handle channels widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::channels_xscrollcommand args {}

# scalerParameterDialog::ok_command --
#
# Callback to handle ok widget option -command
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::ok_command args {}

# scalerParameterDialog::period_command --
#
# Callback to handle period widget option -command
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::period_command args {
    puts period
    }

# scalerParameterDialog::period_invalidcommand --
#
# Callback to handle period widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::period_invalidcommand args {}

# scalerParameterDialog::period_validatecommand --
#
# Callback to handle period widget option -validatecommand
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::period_validatecommand args {}

# scalerParameterDialog::period_xscrollcommand --
#
# Callback to handle period widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
proc scalerParameterDialog::period_xscrollcommand args {}


# END CALLBACK CODE

# scalerParameterDialog::init --
#
#   Call the optional userinit and initialize the dialog.
#   DO NOT EDIT THIS PROCEDURE.
#
# Arguments:
#   root   the root window to load this dialog into
#
# Results:
#   dialog will be created, or a background error will be thrown
#
proc scalerParameterDialog::init {root args} {
    # Catch this in case the user didn't define it
    catch {scalerParameterDialog::userinit}
    if {[info exists embed_args]} {
	# we are running in the plugin
	scalerParameterDialog::ui $root
    } elseif {$::argv0 == [info script]} {
	# we are running in stand-alone mode
	wm title $root scalerParameterDialog
	if {[catch {
	    # Create the UI
	    scalerParameterDialog::ui  $root
	} err]} {
	    bgerror $err ; exit 1
	}
    }
    catch {scalerParameterDialog::run $root}

}


