/*
    This software is Copyright by the Board of Trustees of Michigan
    State University (c) Copyright 2009.

    You may use this software under the terms of the GNU public license
    (GPL).  The terms of this license are described at:

     http://www.gnu.org/licenses/gpl.txt

     Author:
             Ron Fox
	     NSCL
	     Michigan State University
*/

#include "EVBFramework.h"
#include "CEVBFrameworkApp.h"

struct gengetopt_args_info;

/**
 * EVBFramework.cpp - Implementation of the event buidler framework API.
 *                     the methods in this file are provided for use 
 *                     by event source classes written to work with this framework.
 */

/**
 *  getProgramOptions - It is possible for users to extend the command line options 
 *                      recognized by the event builder client framework.  Command line
 *                      options are parsed by code generated by gengetopt.  gengetopt
 *                      parses the command line into a struct.  The struct is 
 *                      made available to application code via this function.
 */
const struct gengetopt_args_info*
CEVBClientFramework::getProgramOptions()
{
  CEVBFrameworkApp* pApp = CEVBFrameworkApp::getInstance();
  return pApp->getParsedArgs();
}
/**
 * submitFragmentList: Submit a list of fragments to the event builder.
 *
 * @param flist - List of fragments to submit.
 *
 */
void
CEVBClientFramework::submitFragmentList(CEVBFragmentList& flist)
{
  CEVBFrameworkApp* pApp = CEVBFrameworkApp::getInstance();
  pApp->send(flist);
}

/**
 * Transfer control to the application singleton's main:
 * 
 * @param argc - number of command line parameters.
 * @param argv - Array of pointers to the command line arguments.
 *
 * @return int - status as per int ::main(int argc, char** argv)
 */
int
CEVBClientFramework::main(int argc, char** argv) 
{
  CEVBFrameworkApp* pApp = CEVBFrameworkApp::getInstance();
  pApp->main(argc, argv);
}
