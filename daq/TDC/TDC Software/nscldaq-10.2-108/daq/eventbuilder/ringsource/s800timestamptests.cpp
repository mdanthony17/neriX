// s800timestamptests.cpp
//
// Author : Jeromy Tompkins
// Date : 2/21/2014
//
// Tests to ensure proper extraction of an s800 timestamp
// from the s800 data buffer. 

#include <cppunit/extensions/HelperMacros.h>
#include <cppunit/Asserter.h>
#include <string>

#include "Asserts.h"
#include <stdint.h>
#include <s800.h>
#include <DataFormat.h>
#include <string.h>
#include <stdlib.h>

extern "C" { uint64_t timestamp(pPhysicsEventItem); }

//////////////////////////////////////////////////////////////////////////////////////////
// Event item tests.

class S800TimestampTest : public CppUnit::TestFixture {

  CPPUNIT_TEST_SUITE(S800TimestampTest);
  CPPUNIT_TEST(testTstampType);
  CPPUNIT_TEST(testTstampSize);
  CPPUNIT_TEST(testTstampBody);
  CPPUNIT_TEST(testTstampFullBuffer);
  CPPUNIT_TEST_SUITE_END();


private:
  static uint16_t sample_data[];
  static uint16_t sample_tstamp_data[];

public:
  void setUp() {
  }
  void tearDown() {
  }
protected:
  void testTstampType();
  void testTstampSize();
  void testTstampBody();
  void testTstampFullBuffer();
};

CPPUNIT_TEST_SUITE_REGISTRATION(S800TimestampTest);

// This is real data from the s800 with a slight twist 
// to have nonzero values in the upper bits
uint16_t S800TimestampTest::sample_data[] = {
0x057a, 0x0000, 0x001e, 0x0000, 
0x0576, 0x0000, 0x0574, 0x5800, 0x0005, 0x0006, 0x5803,0xf1a9,
0x000c, 0x0099, 0x00aa, 0x0005, 0x5804, 0x0009, 0x0000,0x0000,
0x0004, 0x5801, 0x0001, 0x8401, 0x0005, 0x5802, 0xc527,0x4000,
0x5000, 0x0006, 0x5810, 0x0002, 0x05b0, 0x2000, 0x2000,0x0014,
0x5820, 0x0012, 0x5821, 0x0036, 0x1048, 0x204d, 0x303e,0x4049,
0x5048, 0x6049, 0x7066, 0x8040, 0x904d, 0xa066, 0xb057,0xc035,
0xd059, 0xe038, 0xf045, 0x048a, 0x5840, 0x0000, 0x0483,0x5841,
0x0000, 0x8500, 0x0066, 0x0499, 0x086e, 0x0c80, 0x8501,0x0067,
0x048e, 0x0868, 0x0c84, 0x8502, 0x0064, 0x049f, 0x086c,0x0c8b,
0x8503, 0x006c, 0x049c, 0x087c, 0x0c83, 0x8504, 0x005c,0x0498,
0x0862, 0x0c85, 0x8505, 0x0065, 0x049a, 0x0865, 0x0c7c,0x8506,
0x0063, 0x0497, 0x0855, 0x0c7f, 0x8507, 0x005c, 0x049a,0x0871,
0x0c7c, 0x8508, 0x0067, 0x049a, 0x0862, 0x0c90, 0x8509,0x0068,
0x0494, 0x0861, 0x0c7c, 0x850a, 0x0068, 0x0497, 0x0866,0x0c80,
0x850b, 0x0067, 0x049a, 0x0863, 0x0c7a, 0x850c, 0x0066,0x04a2,
0x0869, 0x0c73, 0x850d, 0x0062, 0x0497, 0x0868, 0x0c7a,0x850e,
0x0072, 0x04a0, 0x085e, 0x0c80, 0x850f, 0x0060, 0x04ae,0x0853,
0x0c6a, 0x8510, 0x006d, 0x0497, 0x0863, 0x0c4e, 0x8511,0x007c,
0x049c, 0x085f, 0x0c51, 0x8512, 0x007f, 0x04a5, 0x085c,0x0c56,
0x8513, 0x0073, 0x04a1, 0x0862, 0x0c58, 0x8514, 0x0085,0x0498,
0x0861, 0x0c4a, 0x8515, 0x006d, 0x049c, 0x0865, 0x0c4e,0x8516,
0x0088, 0x049a, 0x0869, 0x0c55, 0x8517, 0x006f, 0x049b,0x0867,
0x0c53, 0x8518, 0x0080, 0x04af, 0x086b, 0x0c67, 0x8519,0x006e,
0x04a1, 0x0865, 0x0c5b, 0x851a, 0x0076, 0x0492, 0x085e,0x0c58,
0x851b, 0x0074, 0x0490, 0x086b, 0x0c5d, 0x851c, 0x0072,0x04a4,
0x085a, 0x0c68, 0x851d, 0x0058, 0x049c, 0x0865, 0x0c65,0x851e,
0x006b, 0x049e, 0x0863, 0x0c64, 0x851f, 0x006e, 0x049f,0x0855,
0x0c63, 0x8520, 0x0063, 0x0481, 0x0868, 0x8521, 0x0067,0x047e,
0x0862, 0x8522, 0x0062, 0x0480, 0x0861, 0x8523, 0x0066,0x0483,
0x0866, 0x8524, 0x0062, 0x0475, 0x0866, 0x8525, 0x0066,0x047e,
0x0864, 0x8526, 0x005b, 0x0478, 0x0862, 0x8527, 0x005f,0x047d,
0x085e, 0x8528, 0x0072, 0x047e, 0x0862, 0x8529, 0x006c,0x047f,
0x0862, 0x852a, 0x0068, 0x047e, 0x0855, 0x852b, 0x006b,0x0482,
0x0865, 0x852c, 0x0075, 0x0480, 0x085d, 0x852d, 0x007f,0x047e,
0x0866, 0x852e, 0x0071, 0x0481, 0x0865, 0x852f, 0x0074,0x047e,
0x085e, 0x8530, 0x0082, 0x0477, 0x085a, 0x8531, 0x008a,0x0483,
0x0858, 0x8532, 0x0081, 0x0480, 0x085c, 0x8533, 0x007e,0x0486,
0x0857, 0x8534, 0x0079, 0x047e, 0x085c, 0x8535, 0x0080,0x047e,
0x0851, 0x8536, 0x0078, 0x046f, 0x0856, 0x8537, 0x007b,0x0477,
0x0862, 0x8538, 0x006c, 0x0477, 0x084f, 0x8539, 0x0082,0x047d,
0x0861, 0x853a, 0x007c, 0x046e, 0x0854, 0x853b, 0x0086,0x046c,
0x0862, 0x853c, 0x007c, 0x046f, 0x085a, 0x853d, 0x0084,0x046c,
0x0857, 0x853e, 0x0080, 0x0470, 0x0857, 0x853f, 0x0072,0x0472,
0x085e, 0x8540, 0x0067, 0x04a4, 0x086b, 0x0c8f, 0x8541,0x006c,
0x0498, 0x0867, 0x0c90, 0x8542, 0x0067, 0x04ae, 0x086c,0x0c96,
0x8543, 0x006f, 0x04a7, 0x087f, 0x0c94, 0x8544, 0x0060,0x04a6,
0x0861, 0x0c8f, 0x8545, 0x0067, 0x04a4, 0x0860, 0x0c89,0x8546,
0x0066, 0x04a4, 0x0855, 0x0c8d, 0x8547, 0x005b, 0x04a6,0x0870,
0x0c88, 0x8548, 0x006c, 0x04a8, 0x0861, 0x0ca0, 0x8549,0x006a,
0x04a1, 0x0861, 0x0c87, 0x854a, 0x006c, 0x04a2, 0x0867,0x0c90,
0x854b, 0x006a, 0x04a7, 0x0866, 0x0c85, 0x854c, 0x0067,0x04af,
0x0866, 0x0c7c, 0x854d, 0x0067, 0x04a3, 0x0867, 0x0c85,0x854e,
0x0076, 0x04b6, 0x085b, 0x0c8f, 0x854f, 0x0061, 0x04c0,0x0854,
0x0c72, 0x8550, 0x0075, 0x04a8, 0x0861, 0x0c4b, 0x8551,0x0086,
0x04ac, 0x085a, 0x0c4e, 0x8552, 0x0088, 0x04bb, 0x085a,0x0c58,
0x8553, 0x007b, 0x04b4, 0x085f, 0x0c57, 0x8554, 0x008c,0x04a8,
0x0860, 0x0c46, 0x8555, 0x0071, 0x04aa, 0x0863, 0x0c4c,0x8556,
0x008f, 0x04a9, 0x0868, 0x0c54, 0x8557, 0x0078, 0x04ab,0x0869,
0x0c54, 0x8558, 0x0086, 0x04c0, 0x086d, 0x0c6b, 0x8559,0x0076,
0x04b2, 0x0866, 0x0c5c, 0x855a, 0x007d, 0x04a2, 0x085f,0x0c5d,
0x855b, 0x007d, 0x049e, 0x086e, 0x0c60, 0x855c, 0x0079,0x04b2,
0x085c, 0x0c6d, 0x855d, 0x005b, 0x04ad, 0x0865, 0x0c6a,0x855e,
0x0073, 0x04af, 0x0864, 0x0c6d, 0x855f, 0x0074, 0x04b1,0x0852,
0x0c67, 0x8560, 0x0067, 0x0487, 0x0868, 0x8561, 0x0065,0x0483,
0x0863, 0x8562, 0x0063, 0x0485, 0x0866, 0x8563, 0x0067,0x0488,
0x0868, 0x8564, 0x0061, 0x047c, 0x0868, 0x8565, 0x0068,0x047f,
0x0865, 0x8566, 0x005c, 0x047a, 0x0864, 0x8567, 0x005e,0x047f,
0x085d, 0x8568, 0x0075, 0x0483, 0x0865, 0x8569, 0x0070,0x0481,
0x0863, 0x856a, 0x006b, 0x047e, 0x0859, 0x856b, 0x006d,0x0487,
0x0868, 0x856c, 0x007c, 0x0482, 0x0862, 0x856d, 0x0084,0x0482,
0x086a, 0x856e, 0x0074, 0x0487, 0x0867, 0x856f, 0x0078,0x0480,
0x085e, 0x8570, 0x0084, 0x0485, 0x0860, 0x8571, 0x008a,0x048c,
0x085b, 0x8572, 0x0082, 0x048a, 0x0861, 0x8573, 0x0080,0x0491,
0x085a, 0x8574, 0x0076, 0x0488, 0x0860, 0x8575, 0x0082,0x0487,
0x0856, 0x8576, 0x007a, 0x0476, 0x0858, 0x8577, 0x0078,0x047f,
0x0868, 0x8578, 0x006a, 0x0481, 0x0856, 0x8579, 0x0082,0x0486,
0x0868, 0x857a, 0x007e, 0x0475, 0x085b, 0x857b, 0x0089,0x0472,
0x086d, 0x857c, 0x007f, 0x0473, 0x085f, 0x857d, 0x0085,0x0473,
0x085a, 0x857e, 0x0085, 0x0473, 0x0863, 0x857f, 0x0072,0x0479,
0x0866, 0x8580, 0x006a, 0x04a7, 0x0873, 0x0c96, 0x8581,0x0070,
0x049b, 0x086d, 0x0c97, 0x8582, 0x006c, 0x04af, 0x0871,0x0c9a,
0x8583, 0x0074, 0x04aa, 0x0882, 0x0c98, 0x8584, 0x0061,0x04a9,
0x0868, 0x0c96, 0x8585, 0x006d, 0x04a7, 0x0865, 0x0c90,0x8586,
0x0068, 0x04a5, 0x085d, 0x0c92, 0x8587, 0x005f, 0x04a9,0x0874,
0x0c91, 0x8588, 0x006f, 0x04a8, 0x0867, 0x0ca4, 0x8589,0x006d,
0x04a2, 0x0868, 0x0c8b, 0x858a, 0x006e, 0x04a4, 0x086c,0x0c96,
0x858b, 0x006c, 0x04a8, 0x086c, 0x0c89, 0x858c, 0x006a,0x04b1,
0x086f, 0x0c84, 0x858d, 0x006a, 0x04a6, 0x086d, 0x0c8b,0x858e,
0x0076, 0x04b4, 0x0862, 0x0c93, 0x858f, 0x0063, 0x04c3,0x085a,
0x0c79, 0x8590, 0x0078, 0x04ad, 0x0864, 0x0c55, 0x8591,0x008a,
0x04b1, 0x085e, 0x0c59, 0x8592, 0x008c, 0x04c0, 0x085c,0x0c64,
0x8593, 0x007c, 0x04b6, 0x0862, 0x0c63, 0x8594, 0x008c,0x04ac,
0x0862, 0x0c51, 0x8595, 0x0074, 0x04ad, 0x0864, 0x0c56,0x8596,
0x0091, 0x04af, 0x086a, 0x0c5f, 0x8597, 0x0078, 0x04ae,0x0869,
0x0c5b, 0x8598, 0x008a, 0x04c6, 0x086c, 0x0c76, 0x8599,0x007a,
0x04b5, 0x0868, 0x0c64, 0x859a, 0x007f, 0x04a6, 0x085e,0x0c66,
0x859b, 0x007f, 0x04a3, 0x086b, 0x0c6d, 0x859c, 0x007b,0x04b7,
0x085b, 0x0c74, 0x859d, 0x005f, 0x04b0, 0x0869, 0x0c74,0x859e,
0x0075, 0x04b3, 0x0865, 0x0c74, 0x859f, 0x0078, 0x04b6,0x0858,
0x0c71, 0x85a0, 0x0068, 0x048b, 0x086e, 0x85a1, 0x006a,0x0484,
0x0868, 0x85a2, 0x0068, 0x0487, 0x086b, 0x85a3, 0x006b,0x048d,
0x086b, 0x85a4, 0x0065, 0x047c, 0x086d, 0x85a5, 0x006b,0x0481,
0x086b, 0x85a6, 0x0060, 0x047a, 0x086a, 0x85a7, 0x0062,0x0481,
0x0860, 0x85a8, 0x0078, 0x0484, 0x0868, 0x85a9, 0x0076,0x0484,
0x086a, 0x85aa, 0x006e, 0x0480, 0x085e, 0x85ab, 0x0072,0x048b,
0x086e, 0x85ac, 0x007b, 0x0484, 0x0866, 0x85ad, 0x0088,0x0484,
0x086c, 0x85ae, 0x0076, 0x0488, 0x086b, 0x85af, 0x007a,0x0482,
0x0862, 0x85b0, 0x0089, 0x0487, 0x085f, 0x85b1, 0x008d,0x0490,
0x0859, 0x85b2, 0x0087, 0x048b, 0x0864, 0x85b3, 0x0085,0x0492,
0x0858, 0x85b4, 0x007d, 0x048a, 0x0862, 0x85b5, 0x0089,0x048a,
0x0856, 0x85b6, 0x0080, 0x0478, 0x0854, 0x85b7, 0x007b,0x0481,
0x086e, 0x85b8, 0x006e, 0x0481, 0x0855, 0x85b9, 0x0086,0x0489,
0x0866, 0x85ba, 0x0082, 0x0476, 0x085c, 0x85bb, 0x008e,0x0474,
0x086c, 0x85bc, 0x0082, 0x0475, 0x0862, 0x85bd, 0x008a,0x0473,
0x0859, 0x85be, 0x0089, 0x0476, 0x0862, 0x85bf, 0x0074,0x047c,
0x0866, 0x85c0, 0x006a, 0x04ac, 0x0873, 0x0c92, 0x85c1,0x0074,
0x049e, 0x086c, 0x0c95, 0x85c2, 0x006c, 0x04b2, 0x086f,0x0c99,
0x85c3, 0x0077, 0x04ae, 0x0883, 0x0c96, 0x85c4, 0x0061,0x04ae,
0x0869, 0x0c94, 0x85c5, 0x006e, 0x04ab, 0x0866, 0x0c8e,0x85c6,
0x006a, 0x04a9, 0x085c, 0x0c8f, 0x85c7, 0x0060, 0x04ac,0x0874,
0x0c8b, 0x85c8, 0x006e, 0x04ad, 0x0869, 0x0ca5, 0x85c9,0x0070,
0x04a6, 0x0867, 0x0c87, 0x85ca, 0x006e, 0x04a8, 0x086c,0x0c94,
0x85cb, 0x006c, 0x04ad, 0x086e, 0x0c85, 0x85cc, 0x006b,0x04b7,
0x086e, 0x0c80, 0x85cd, 0x006a, 0x04aa, 0x086b, 0x0c8a,0x85ce,
0x007a, 0x04bc, 0x0862, 0x0c92, 0x85cf, 0x0063, 0x04c4,0x0854,
0x0c75, 0x85d0, 0x0079, 0x04b1, 0x0870, 0x0c4d, 0x85d1,0x0089,
0x04b2, 0x086a, 0x0c51, 0x85d2, 0x008a, 0x04c0, 0x0866,0x0c5c,
0x85d3, 0x007c, 0x04b8, 0x086e, 0x0c5d, 0x85d4, 0x0081,0x04ac,
0x086e, 0x0c4d, 0x85d5, 0x0074, 0x04b1, 0x0870, 0x0c4e,0x85d6,
0x0090, 0x04b0, 0x0876, 0x0c5a, 0x85d7, 0x007b, 0x04b1,0x0876,
0x0c54, 0x85d8, 0x0089, 0x04c7, 0x0877, 0x0c6e, 0x85d9,0x007a,
0x04b6, 0x0873, 0x0c5e, 0x85da, 0x007e, 0x04a8, 0x086a,0x0c60,
0x85db, 0x0080, 0x04a3, 0x0876, 0x0c67, 0x85dc, 0x007c,0x04b8,
0x086a, 0x0c6e, 0x85dd, 0x0060, 0x04b2, 0x0872, 0x0c6f,0x85de,
0x0076, 0x04b4, 0x086f, 0x0c6f, 0x85df, 0x0078, 0x04b5,0x0860,
0x0c6e, 0x85e0, 0x0068, 0x048a, 0x086e, 0x85e1, 0x006c,0x0486,
0x0868, 0x85e2, 0x006a, 0x048a, 0x086a, 0x85e3, 0x006a,0x048b,
0x086c, 0x85e4, 0x0067, 0x047d, 0x086c, 0x85e5, 0x006d,0x0483,
0x0869, 0x85e6, 0x0062, 0x047b, 0x0869, 0x85e7, 0x0064,0x0482,
0x0860, 0x85e8, 0x0078, 0x0486, 0x0868, 0x85e9, 0x0076,0x0487,
0x086a, 0x85ea, 0x006f, 0x0480, 0x085f, 0x85eb, 0x0074,0x048b,
0x086e, 0x85ec, 0x007e, 0x0485, 0x0866, 0x85ed, 0x0088,0x0482,
0x086c, 0x85ee, 0x007a, 0x0487, 0x0869, 0x85ef, 0x007e,0x0486,
0x0864, 0x85f0, 0x008c, 0x048a, 0x085c, 0x85f1, 0x0090,0x0498,
0x0856, 0x85f2, 0x008b, 0x0492, 0x0860, 0x85f3, 0x0088,0x0498,
0x0856, 0x85f4, 0x0081, 0x048e, 0x0860, 0x85f5, 0x008a,0x048f,
0x0852, 0x85f6, 0x0083, 0x047f, 0x0852, 0x85f7, 0x007e,0x0487,
0x086c, 0x85f8, 0x0070, 0x0486, 0x0854, 0x85f9, 0x008c,0x048a,
0x0863, 0x85fa, 0x0086, 0x047e, 0x0859, 0x85fb, 0x0090,0x047a,
0x0868, 0x85fc, 0x0085, 0x047b, 0x0861, 0x85fd, 0x008d,0x0478,
0x0856, 0x85fe, 0x008d, 0x047b, 0x0860, 0x85ff, 0x0076,0x047e,
0x0863, 0x0004, 0x5845, 0x0000, 0x05ce, 0x0092, 0x5840,0x0001,
0x008b, 0x5841, 0x0000, 0x8558, 0x08c1, 0x8570, 0x0087,0x8572,
0x0073, 0x8573, 0x0087, 0x8574, 0x0081, 0x8575, 0x0076,0x8576,
0x0078, 0x8577, 0x0076, 0x8578, 0x0074, 0x8579, 0x0085,0x857a,
0x007c, 0x857b, 0x006e, 0x857d, 0x0076, 0x857e, 0x0070,0x857f,
0x0081, 0x8598, 0x08e0, 0x85b0, 0x008c, 0x85b1, 0x0087,0x85b2,
0x0073, 0x85b3, 0x008d, 0x85b4, 0x0086, 0x85b5, 0x007a,0x85b6,
0x007c, 0x85b7, 0x007c, 0x85b8, 0x007a, 0x85b9, 0x008a,0x85ba,
0x0081, 0x85bb, 0x0075, 0x85bc, 0x0085, 0x85bd, 0x0078,0x85be,
0x0074, 0x85bf, 0x0086, 0x85d1, 0x0490, 0x85d8, 0x08db,0x85f0,
0x008b, 0x85f1, 0x0084, 0x85f2, 0x0073, 0x85f3, 0x008c,0x85f4,
0x0088, 0x85f5, 0x007b, 0x85f6, 0x007b, 0x85f7, 0x007b,0x85f8,
0x0079, 0x85f9, 0x008b, 0x85fa, 0x0084, 0x85fb, 0x0070,0x85fc,
0x0084, 0x85fd, 0x0077, 0x85fe, 0x0074, 0x85ff, 0x0085,0x8600,
0x0078, 0x8618, 0x08d2, 0x8630, 0x008e, 0x8631, 0x008a,0x8632,
0x0078, 0x8633, 0x0090, 0x8634, 0x008a, 0x8635, 0x007f,0x8636,
0x007f, 0x8637, 0x007c, 0x8638, 0x007d, 0x8639, 0x008d,0x863a,
0x0084, 0x863b, 0x0074, 0x863c, 0x0084, 0x863d, 0x007f,0x863e,
0x0078, 0x863f, 0x008c, 0x0004, 0x5845, 0x0000, 0x05c7,0x0005,
0x58b0, 0x0000, 0x500e, 0x800e, 0x0004, 0x58b0, 0x0001,0x400c,
0x0006, 0x58b0, 0x0002, 0x0000, 0x0000, 0x0000, 0x0011,0x5870,
0x000f, 0x5871, 0x0000, 0x806c, 0x006e, 0x0e8d, 0x80ac,0x005f,
0x0e8e, 0x80ec, 0x0063, 0x0e8a, 0x812c, 0x0062, 0x0e91,0x0003,
0x58a0, 0x000f, 0x0002, 0x58d0, 0x0002, 0x58e0
};

// Here is a sample tstamp packet. it is the same as in the above
// buffer
uint16_t S800TimestampTest::sample_tstamp_data[] = {
0x0006, 0x5803, 0xf1a9, 0x000c, 0x0099, 0x00aa
};

void S800TimestampTest::testTstampType() {

  pS800timestamp tstamp = reinterpret_cast<pS800timestamp>(sample_tstamp_data);

  CPPUNIT_ASSERT_EQUAL(static_cast<uint16_t>(0x5803), tstamp->s_type);

}

void S800TimestampTest::testTstampSize() {

  pS800timestamp tstamp = reinterpret_cast<pS800timestamp>(sample_tstamp_data);

  CPPUNIT_ASSERT_EQUAL(static_cast<uint16_t>(0x0006), tstamp->s_size);

}

void S800TimestampTest::testTstampBody() {

  pS800timestamp tstamp = reinterpret_cast<pS800timestamp>(sample_tstamp_data);

  CPPUNIT_ASSERT_EQUAL(static_cast<uint16_t>(0xf1a9), tstamp->s_timestamp0);
  CPPUNIT_ASSERT_EQUAL(static_cast<uint16_t>(0x000c), tstamp->s_timestamp16);
  CPPUNIT_ASSERT_EQUAL(static_cast<uint16_t>(0x0099), tstamp->s_timestamp32);
  CPPUNIT_ASSERT_EQUAL(static_cast<uint16_t>(0x00aa), tstamp->s_timestamp48);

}

void S800TimestampTest::testTstampFullBuffer()
{
  pPhysicsEventItem item = reinterpret_cast<pPhysicsEventItem>(sample_data);
  uint64_t time = timestamp(item);

  CPPUNIT_ASSERT_EQUAL(static_cast<uint64_t>(0x00aa0099000cf1a9),
                       time);

}
